@page "/admin/orders"
@inherits OwningComponentBase<IOrderRepository>

<OrderTable TableTitle="UnShipped Orders"
            Orders="UnShippedOrders"
            ButtonLabel="Ship"
            OrderSelected="ShipOrder" />

<OrderTable TableTitle="Shipped Orders"
            Orders="ShippedOrders"
            ButtonLabel="Reset"
            OrderSelected="ResetOrder" />

<button class="btn btn-outline-primary" @onclick="UpdateData">Refresh Data</button>

@code {
    public IOrderRepository Repository => Service;
    public IEnumerable<Order> AllOrders { get; set; } = Enumerable.Empty<Order>();
    public IEnumerable<Order> UnShippedOrders { get; set; } = Enumerable.Empty<Order>();
    public IEnumerable<Order> ShippedOrders { get; set; } = Enumerable.Empty<Order>();

    protected async override Task OnInitializedAsync()
    {
        await UpdateData();
    }

    public async Task UpdateData()
    {
        AllOrders = await Repository.Orders.ToListAsync();
        UnShippedOrders = AllOrders.Where(o => !o.Shipped);
        ShippedOrders = AllOrders.Where(o => o.Shipped);
    }

    public void ShipOrder(int id) => UpdateOrder(id, true);
    public void ResetOrder(int id) => UpdateOrder(id, false);

    private void UpdateOrder(int id, bool shipValue)
    {
        Order? order = Repository.Orders.FirstOrDefault(o => o.OrderID == id);

        if (order != null)
        {
            order.Shipped = shipValue;
            Repository.SaveOrder(order);
        }
    }
}
